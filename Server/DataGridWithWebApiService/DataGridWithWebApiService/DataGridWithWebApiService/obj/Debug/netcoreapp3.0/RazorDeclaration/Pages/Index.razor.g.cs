#pragma checksum "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b57a6246b368c40536ea5f36554f2303dd900214"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace DataGridWithWebApiService.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using Microsoft.AspNetCore.Components.Layouts;

#line default
#line hidden
#line 4 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 5 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using DataGridWithWebApiService;

#line default
#line hidden
#line 7 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using DataGridWithWebApiService.Shared;

#line default
#line hidden
#line 8 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#line 5 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\Pages\Index.razor"
using DataGridWithWebApiService.Data;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 24 "C:\Work\BlazorSRCMy\Server\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\DataGridWithWebApiService\Pages\Index.razor"
            
    List<Categories> categories;

    protected override async Task OnInitAsync()
    {
        categories = await Http.GetJsonAsync<List<Categories>>(wsp.Path + "categories");
    }
    async void OnRowRemoving(Categories dataItem)
    {
        await Http.DeleteAsync(wsp.Path + "categories/" + dataItem.CategoryId);
        categories.Remove(dataItem);
        await Invoke(StateHasChanged);
    }
    async void OnRowUpdating(Categories dataItem, Dictionary<string, object> newValue)
    {
        foreach (var field in newValue.Keys)
        {
            switch (field)
            {
                case nameof(Categories.CategoryName):
                    dataItem.CategoryName = (string)newValue[field];
                    break;
                case nameof(Categories.Description):
                    dataItem.Description = (string)newValue[field];
                    break;
            }
        }
        await Http.PutJsonAsync(wsp.Path + "categories/" + dataItem.CategoryId, dataItem);
        await Invoke(StateHasChanged);
    }
    async void OnRowInserting(Dictionary<string, object> newValue)
    {
        Categories newCategory = new Categories();
        foreach (var field in newValue.Keys)
        {
            switch (field)
            {
                case nameof(Categories.CategoryName):
                    newCategory.CategoryName = (string)newValue[field];
                    break;
                case nameof(Categories.Description):
                    newCategory.Description = (string)newValue[field];
                    break;
            }
        }
        Categories insertedCategory = await Http.PostJsonAsync<Categories>(wsp.Path + "categories/", newCategory);
        newCategory.CategoryId = insertedCategory.CategoryId;
        categories.Add(newCategory);
        await Invoke(StateHasChanged);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private WebServicePath wsp { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
