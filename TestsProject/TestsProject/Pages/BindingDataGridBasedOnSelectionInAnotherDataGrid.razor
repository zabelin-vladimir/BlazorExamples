@page "/BindingDataGridBasedOnSelectionInAnotherDataGrid"
@inject HttpClient Http
@inject WebServicePath wsp
@using TestsProject.Data

<h1>Cascading DxDataGrids</h1>
@if (categories == null)
{
    <h1>Loading...</h1>
}
else
{
    <DxDataGrid Data=@categories
                ShowFilterRow=false
                SelectedItemChanged=@((dataItem) => OnCategorySelectionChanged(dataItem))>
        <DxDataGridColumn Field=@nameof(Categories.CategoryId)>
        </DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Categories.CategoryName)></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Categories.Description)></DxDataGridColumn>
    </DxDataGrid>
}
@if (products == null)
{
    <h1>Select a category</h1>
}
else
{
    <DxDataGrid Data=@products
                ShowFilterRow=false>
        <DxDataGridColumn Field=@nameof(Products.ProductName)>
        </DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Products.CategoryId)></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Products.UnitPrice)></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Products.UnitsInStock)></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Products.QuantityPerUnit)></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(Products.Discontinued)></DxDataGridColumn>
    </DxDataGrid>
}

@functions {
    List<Categories> categories;
    List<Products> products;

    protected override async Task OnInitAsync()
    {
        categories = await Http.GetJsonAsync<List<Categories>>(wsp.Path + "categories");
    }
    async void OnCategorySelectionChanged(Categories selectedCategory)
    {
        products = await Http.GetJsonAsync<List<Products>>(wsp.Path + "products/getByCategory/" + selectedCategory.CategoryId);
        await base.Invoke(StateHasChanged);
    }
}